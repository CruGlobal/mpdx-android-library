apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

apply plugin: 'realm-android'
android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kapt {
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 9999)
        }
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += '-Xjvm-default=enable'
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }
    lintOptions {
        lintConfig file('../analysis/lint/lint.xml')
        htmlOutput file("$project.buildDir/reports/lint/lint.html")
        xmlOutput file("$project.buildDir/reports/lint/lintReport.xml")

        abortOnError true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    configurations.all {
        resolutionStrategy {
            force "org.hamcrest:hamcrest-core:${deps.hamcrest}"
            force "org.hamcrest:hamcrest-library:${deps.hamcrest}"
        }
    }
}

ext {
    gson = '2.8.6'
    rxandroid = '2.1.1'
    rxLifecycle = "2.2.2"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${deps.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${deps.kotlinCoroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${deps.kotlinCoroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:${deps.kotlinCoroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${deps.kotlinCoroutines}"

    implementation "androidx.activity:activity:${deps.androidX.activity}"
    implementation "androidx.activity:activity-ktx:${deps.androidX.activity}"
    implementation "androidx.appcompat:appcompat:${deps.androidX.appCompat}"
    implementation "androidx.biometric:biometric:${deps.androidX.biometric}"
    implementation "androidx.cardview:cardview:${deps.androidX.cardView}"
    implementation "androidx.constraintlayout:constraintlayout:${deps.androidX.constraintLayout}"
    implementation "androidx.core:core-ktx:${deps.androidX.core}"
    implementation "androidx.fragment:fragment-ktx:${deps.androidX.fragment}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${deps.androidX.lifecycle}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${deps.androidX.swipeRefreshLayout}"
    implementation "com.google.android.material:material:${deps.materialDesign}"

    implementation "com.google.android.gms:play-services-tagmanager:${deps.googleTagManager}"

    implementation "org.ccci.gto.android:gto-support-androidx-fragment:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-androidx-lifecycle:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-api-okhttp3:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-api-retrofit2:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-base:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-compat:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-core:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-dagger:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-firebase-crashlytics:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-jsonapi:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-jsonapi-retrofit2:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-kotlin-coroutines:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-okhttp3:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-picasso:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-realm:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-recyclerview:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-recyclerview-advrecyclerview:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-util:${deps.gtoSupport}"
    implementation "org.ccci.gto.android:gto-support-viewpager:${deps.gtoSupport}"

    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.realm:android-adapters:${deps.realmAdapters}"
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.louiscad.splitties:splitties-fragmentargs:${deps.splitties}"
    implementation "com.squareup.moshi:moshi:${deps.moshi}"
    implementation "com.squareup.retrofit2:retrofit:${deps.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${deps.retrofit}"
    implementation "com.jakewharton:butterknife:${deps.butterknife}"
    implementation "com.google.dagger:dagger-android:${deps.dagger}"
    implementation "com.google.dagger:dagger-android-support:${deps.dagger}"
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rxLifecycle"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rxLifecycle"
    implementation "com.nshmura:recyclertablayout:1.5.0"
    implementation "jp.wasabeef:picasso-transformations:${deps.picassoTransforms}"

    implementation 'com.github.Karumi:WeakDelegate:1.0.1'
    implementation "com.github.PhilJay:MPAndroidChart:${deps.mpChart}"
    implementation "com.google.guava:guava:${deps.guava}"
    implementation "com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:${deps.advrecyclerview}"
    implementation "com.jakewharton.timber:timber:${deps.timber}"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.1'
    implementation 'io.huannguyen.swipeablerv:swipeable-rv:1.0.2'
    implementation "com.squareup.picasso:picasso:${deps.picasso}"
    implementation 'me.relex:circleindicator:2.1.6@aar'
    implementation "org.greenrobot:eventbus:${deps.eventbus}"

    // Don't update fab-speed it introduces bugs
    implementation 'io.github.yavski:fab-speed-dial:1.0.6'

    // debugging tools
    debugImplementation "androidx.multidex:multidex:${deps.androidX.multidex}"
    debugImplementation "com.facebook.flipper:flipper:${deps.facebookFlipper}"
    debugImplementation "com.facebook.flipper:flipper-network-plugin:${deps.facebookFlipper}"
    debugImplementation "com.facebook.soloader:soloader:${deps.facebookSoloader}"
    debugImplementation "com.kgurgul.flipper:flipper-realm-android:${deps.flipperRealm}"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${deps.leakcanary}"
    debugImplementation "com.squareup.okhttp3:logging-interceptor:${deps.okhttp3}"
    debugImplementation "org.ccci.gto.android:gto-support-leakcanary2:${deps.gtoSupport}"

    testImplementation "androidx.test:core:${deps.androidX.test}"
    testImplementation "androidx.test.ext:junit:${deps.androidX.testJUnit}"
    testImplementation "junit:junit:${deps.junit}"
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
    testImplementation "org.robolectric:robolectric:${deps.roboelectric}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${deps.okhttp3}"
    testImplementation "org.hamcrest:hamcrest:${deps.hamcrest}"
    testImplementation "org.mockito:mockito-inline:${deps.mockito}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${deps.mockitoKotlin}"

    testImplementation "org.json:json:20210307"
    testImplementation "org.threeten:threetenbp:1.5.1"

    kapt "com.jakewharton:butterknife-compiler:${deps.butterknife}"
    kapt "com.google.dagger:dagger-android-processor:${deps.dagger}"
    // TODO remove this once we fully migrate to the Dagger Android architecture
    kapt "com.google.dagger:dagger-compiler:${deps.dagger}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${deps.moshi}"
    kapt "dk.ilios:realmfieldnameshelper:${deps.realmFieldNames}"
}